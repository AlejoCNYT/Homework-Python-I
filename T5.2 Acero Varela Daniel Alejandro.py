'''
Universidad Escuela Colombiana de Ingenier√≠a
Algoritmos y programaci√≥n (AYPR)
Profesora: Ingeniera Patricia Salazar Perdomo

Estudiante: Acero Varela Daniel Alejandro

Lenguaje: Python
Referencia: Examen - Tercio 1. Estructuras de control condicional if y while.

2.  Se sabe que uno de los v√©rtices de un tri√°ngulo es (0.0, 0.0). Solicite las coordenadas de los
    otros dos v√©rtices que est√°n sobre los ejes coordenados (suponga que as√≠ es), primero el que
    est√° sobre el eje de las abscisas y luego el que est√° sobre el eje de las ordenadas.

    Cuando el tri√°ngulo est√© en el cuadrante:

    a. I: hallar y escribir el √°rea.
    b. II: hallar y escribir la longitud de la hipotenusa.
    c. III: hallar y escribir el per√≠metro.
    d. IV: hallar y escribir la base y la altura.

    En cualquiera de los casos, debe decir en qu√© cuadrante est√° el tri√°ngulo.

    La distancia entre dos puntos ùëÉ1(ùë•1, ùë¶1) y ùëÉ2(ùë•2, ùë¶2) es ((ùë•2 ‚àí ùë•1)2 + (ùë¶2 ‚àí ùë¶1))**0.5

    Datos de entrada: x, y
    Datos de salida: cuadrante y operaci√≥n
'''

def pide_coordenada (msj):
    print (msj)
    coordenada = float ( input (  ) )
    return coordenada

def clasifica (b, h):
    if b > 0:
        if h > 0:
            return ["I. √Årea del tri√°ngulo =", (b * h) / 2]
        else:
            return ["IV", b]
    else:
        if h > 0:
            return ["II. Longitud de la hipotenusa =", round((b ** 2 + h ** 2) ** 0.5, 1)]
        else:
            return ["III. Per√≠metro =", round(- h - b + (b ** 2 + h ** 2) ** 0.5, 1)] # La medida de la altura y de la base siempre deben ser positivas

def resultados (cuadrante, resultado, b, h):
    if cuadrante != "IV":
        print ("\n\nEl tri√°ngulo de coordenadas (", b, ", 0 ) y, ( 0 ,", h, "), se encuentra en el cuadrante", cuadrante, resultado, end = ".")
    else:
        print ("\n\nEl tri√°ngulo de coordenadas (", b, ", 0 ) y, ( 0 ,", h, "), se encuentra en el cuadrante", cuadrante, "del plano cartesiano.", end = " ")
        print ("Su base =", resultado, "y su altura =", - h, end = ".")    # La medida de la altura siempre debe ser positiva

def main():
    print ("Clasifico un tri√°ngulo en su respectivo cuadrante del plano cartesiano y, realizo la operaci√≥n correspondiente: ")
    print ("\nPlano I: √°rea del tri√°ngulo.")
    print ("Plano II: longitud de la hipotenusa.")
    print ("Plano III: per√≠metro.")
    print ("Plano IV: Base y altura.")
    x = pide_coordenada ("\nPor favor, ingrese la abscisa del punto sobre el eje x (x, 0), donde x: ")
    y = pide_coordenada ("Por favor, ingrese la ordenada del punto sobre el eje y (0, y), donde y: ")
    [cuadrante, resultado] = clasifica (x, y)
    resultados (cuadrante, resultado, x, y)
    print("\n\nFin.\n\n")

main()
